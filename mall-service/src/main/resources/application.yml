server:
  # 服务将要监听的端口
  port: 8001

spring:
  application:
    # 将使用Eureka注册的服务的逻辑名称
    name: mall-service
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/sample-mall?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # xxx
      initialSize: 1
      # xxx
      minIdle: 3
      # xxx
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
  zipkin:
    base-url: http://localhost:9411/
  sleuth:
    sampler:
      percentage: 1 # 值介于0和1之间：0不发送任何数据；0.5发送50%的数据

# mybatis配置
mybatis:
  mapper-locations: classpath*:/mapper/*apper.xml

mapper:
  mappers:
  - tk.mybatis.mapper.common.Mapper
  notEmpty: true

eureka:
  instance:
    # 注册服务的IP，而不是服务器名称
    preferIpAddress: true
  client:
    # 向Eureka注册服务
    registerWithEureka: true
    # 拉取本地注册表的副本
    fetchRegistry: true
    serviceUrl:
      # Eureka服务的位置
      defaultZone: http://localhost:8761/eureka/